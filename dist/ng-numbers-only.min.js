(function(window, angular, undefined) {
'use strict';
angular.module("keepr.ngNumbersOnly",[]),angular.module("keepr.ngNumbersOnly").directive("numbersOnly",function(){return{require:"ngModel",scope:{precision:"@"},link:function(scope,element,attrs,modelCtrl){var currencyDigitPrecision=scope.precision,countDecimalLength=function(number){var str=""+number,index=str.indexOf(".");return index>=0?str.length-index-1:0},currencyDigitLengthIsInvalid=function(inputValue){return inputValue||(inputValue=0),countDecimalLength(inputValue)>currencyDigitPrecision},parseNumber=function(inputValue){return inputValue?(inputValue=inputValue.toString().match(/-?(\d+|\d+.\d+|.\d+)([eE][-+]?\d+)?/g).join(""),inputValue.match(/(e|E|-|\+)/)&&(inputValue=parseFloat(parseFloat(inputValue).toFixed(20).replace(/0+$/,"")).toFixed(2)),currencyDigitPrecision&&currencyDigitLengthIsInvalid(inputValue)&&(inputValue=parseFloat(inputValue).toFixed(currencyDigitPrecision),modelCtrl.$viewValue=inputValue),inputValue):null},isAnAcceptedEventCharCodeCase=function(charCode){var isANumberEventKeycode="0123456789".indexOf(charCode)!==-1,isACommaEventKeycode=","===charCode,isADotEventKeycode="."===charCode;return isANumberEventKeycode||isACommaEventKeycode||isADotEventKeycode},onKeypressEventHandler=function(evt){var charCode=String.fromCharCode(evt.which||event.keyCode),forceRenderComponent=!1;forceRenderComponent=currencyDigitLengthIsInvalid(modelCtrl.$viewValue);var isAnAcceptedCase=isAnAcceptedEventCharCodeCase(charCode);return isAnAcceptedCase||evt.preventDefault(),forceRenderComponent&&modelCtrl.$render(modelCtrl.$viewValue),isAnAcceptedCase},onBlurEventHandler=function(){modelCtrl.$render(modelCtrl.$viewValue)};element.on("keypress",onKeypressEventHandler),element.on("blur",onBlurEventHandler),modelCtrl.$render=function(inputValue){return element.val(parseNumber(inputValue))},modelCtrl.$parsers.push(function(inputValue){if(!inputValue)return inputValue;var transformedInput;return modelCtrl.$setValidity("number",!0),transformedInput=parseNumber(inputValue),transformedInput!==inputValue&&(modelCtrl.$viewValue=transformedInput,modelCtrl.$commitViewValue(),modelCtrl.$render(transformedInput)),transformedInput})}}});
})(window, window.angular);